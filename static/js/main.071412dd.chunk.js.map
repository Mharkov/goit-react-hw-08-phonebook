{"version":3,"sources":["views/Nav/Nav.module.css","components/ContactForm/ContactForm.module.css","redux/auth/auth-operations.js","redux/auth/auth-actios.js","components/ContactList/ContactList.module.css","components/UserMenu/UserMenu.module.css","views/AuthNav/AuthNav.module.css","components/Container/Container.module.css","components/AppBar/AppBar.module.css","redux/contact/contact-actions.js","redux/contact/contact-selectors.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","redux/contact/contact-operations.js","components/ContactList/ContactList.js","views/ContactsView/ContactsView.js","components/Container/Container.js","redux/auth/auth-selectors.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","views/routes.js","views/AuthNav/AuthNav.js","views/Nav/Nav.js","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","App.js","redux/contact/contacts-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js"],"names":["module","exports","axios","defaults","baseURL","token","headers","common","Authorization","signup","payload","dispatch","a","authActions","post","result","data","message","login","then","catch","error","logout","getCurrentUser","getState","persistedToken","auth","get","loginRequest","createAction","loginSuccess","loginError","signupRequest","signupSuccess","signupError","logoutRequest","logoutSuccess","logoutError","currentRequest","currentSuccess","currentError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","contactFilter","getContacts","state","contacts","items","getFilter","filter","getLoading","loading","filteredContacts","createSelector","normalizedFilter","toLowerCase","name","includes","connect","value","contactSelectors","onFilter","e","actions","target","type","onChange","onSubmit","number","contact","contactOperations","useState","setName","setNumber","className","styles","TaskEditor","preventDefault","find","alert","contactValidation","TaskEditor_label","TaskEditor_input","required","TaskEditor_button","onDel","id","delete","useDispatch","useEffect","TaskList","map","TaskList_item","TaskList_button","onClick","ContactsView","useSelector","Container","children","style","container","getUseremail","user","email","isAuthenticated","getIsisAuthorizedSelector","isAuthorized","PrivateRoute","redirectTo","routeProps","isLoadID","to","PublicRoute","shouldRedirect","restricted","routes","HOME","MOVIES","CONTACTS","REGISTER","LOGIN","AuthNav","activeLink","color","backgroundColor","borderColor","s","link","activeStyle","Nav","IsisAuthorized","navList","navListItem","exact","Link","activeClassName","linkFocusColor","UserMenu","button","AppBar","header","HomeView","lazy","RegisterView","LoginView","fallback","path","createReducer","_","combineReducers","initialState","isLoading","action","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","logger","authPersistConfig","key","storage","whiteList","store","configureStore","reducer","counterReducer","persistReducer","authReducer","devTools","process","persistor","persistStore","ReactDom","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.071412dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3SFZR\",\"navList\":\"Nav_navList__1Z5Mu\",\"navListItem\":\"Nav_navListItem__NxVz5\",\"Link\":\"Nav_Link__1CjmF\",\"linkFocusColor\":\"Nav_linkFocusColor__2IpNR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"ContactForm_TaskEditor__2G5aN\",\"TaskEditor_label\":\"ContactForm_TaskEditor_label__1pB5K\",\"TaskEditor_input\":\"ContactForm_TaskEditor_input__AW1Gj\",\"TaskEditorinput\":\"ContactForm_TaskEditorinput__3ZZU5\",\"TaskEditor_button\":\"ContactForm_TaskEditor_button__HqGcn\"};","import axios from 'axios';\r\nimport * as authActions from './auth-actios';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nexport const signup = (payload) => async (dispatch) => {\r\n  dispatch(authActions.signupRequest());\r\n\r\n  try {\r\n    const result = await axios.post('/users/signup', payload);\r\n    token.set(result.data.token);\r\n    dispatch(authActions.signupSuccess(result.data));\r\n  } catch (error) {\r\n    dispatch(authActions.signupError(error.message));\r\n  }\r\n};\r\n\r\nexport const login = (payload) => (dispatch) => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  axios\r\n    .post('/users/login', payload)\r\n    .then(({ data }) => {\r\n      token.set(data.token);\r\n      dispatch(authActions.loginSuccess(data));\r\n    })\r\n\r\n    .catch((error) => dispatch(authActions.loginError(error.message)));\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  dispatch(authActions.logoutRequest());\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nexport const getCurrentUser = () => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n  dispatch(authActions.currentRequest());\r\n  axios\r\n    .get('/users/current')\r\n    .then(({ data }) => dispatch(authActions.currentSuccess(data)))\r\n    .catch((error) => dispatch(authActions.currentError(error.message)));\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const loginRequest = createAction('/users/login/request');\r\nexport const loginSuccess = createAction('/users/login/success');\r\nexport const loginError = createAction('/users/login/error');\r\n\r\nexport const signupRequest = createAction('/users/signup/request');\r\nexport const signupSuccess = createAction('/users/signup/success');\r\nexport const signupError = createAction('/users/signup/error');\r\n\r\nexport const logoutRequest = createAction('/users/logout/request');\r\nexport const logoutSuccess = createAction('/users/logout/success');\r\nexport const logoutError = createAction('/users/logout/error');\r\n\r\nexport const currentRequest = createAction('/users/current/request');\r\nexport const currentSuccess = createAction('/users/current/success');\r\nexport const currentError = createAction('/users/current/error');\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"ContactList_TaskList__1JBPF\",\"TaskList_item\":\"ContactList_TaskList_item__2hsJR\",\"completed\":\"ContactList_completed__361rx\",\"TaskList_text\":\"ContactList_TaskList_text__1Med5\",\"TaskList_actions\":\"ContactList_TaskList_actions__cKVFr\",\"TaskList_button\":\"ContactList_TaskList_button__2Hn-I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__162kJ\",\"name\":\"UserMenu_name__29vc3\",\"button\":\"UserMenu_button__mVCaK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__WUkCX\",\"activeLink\":\"AuthNav_activeLink__3UmUu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1Zezt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__2wAI_\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest'\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess'\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest'\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess'\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const contactFilter = createAction('contacts/filter');\r\n\r\n// export const contactAdd = createAction('contacts/add', (name, number) => ({\r\n//   payload: {\r\n//     id: Date.now(),\r\n//     name,\r\n//     number,\r\n//   },\r\n// }));\r\n\r\n// export const contactAdd = (name, number) => {\r\n//   return {\r\n//     type: actionType.ADD,\r\n//     payload: {\r\n//       id: Date.now(),\r\n//       name,\r\n//       number,\r\n//     },\r\n//   };\r\n// };\r\n\r\n// export const contactDelete = (id) => {\r\n//   return {\r\n//     type: actionType.DELETE,\r\n//     payload: id,\r\n//   };\r\n// };\r\n\r\n// export const conatactFilter = (value) => ({\r\n//   type: actionType.CHANGE_FILTER,\r\n//   payload: value,\r\n// });\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\nexport const getLoading = (state) => state.contacts.loading;\r\nexport const getError = (state) => state.contacts.error;\r\n\r\nexport const filteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n\r\n// export const filteredContacts = (state) => {\r\n//   const allContacts = getContacts(state);\r\n//   const filter = getFilter(state);\r\n//   const normalizedFilter = filter.toLowerCase();\r\n\r\n//   return allContacts.filter(({ name }) =>\r\n//     name.toLowerCase().includes(normalizedFilter)\r\n//   );\r\n// };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/contact/contact-actions';\r\nimport * as contactSelectors from '../../redux/contact/contact-selectors';\r\n\r\nconst Filter = ({ value, onFilter }) => {\r\n  return (\r\n    <div>\r\n      Find contacts by name\r\n      <input type=\"text\" value={value} onChange={onFilter} />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: contactSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onFilter: (e) => dispatch(actions.contactFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\nimport { connect } from 'react-redux';\r\nimport * as contactOperations from '../../redux/contact/contact-operations';\r\nimport * as contactSelectors from '../../redux/contact/contact-selectors';\r\n\r\nconst ContactForm = ({ onSubmit, items }) => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChangeName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const handleChangeNumber = (e) => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  const contactValidation = () => {\r\n    if (items.find((contact) => name === contact.name)) {\r\n      alert(`${name} is already in contacts`);\r\n      return true;\r\n    }\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (contactValidation()) {\r\n      return;\r\n    }\r\n\r\n    onSubmit(name, number);\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={styles.TaskEditor} onSubmit={handleSubmit}>\r\n        <label className={styles.TaskEditor_label}>\r\n          Name\r\n          <input\r\n            className={styles.TaskEditor_input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChangeName}\r\n            required\r\n          />\r\n        </label>\r\n        <label className={styles.TaskEditor_label}>\r\n          Number\r\n          <input\r\n            className={styles.TaskEditor_input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={handleChangeNumber}\r\n            required\r\n          />\r\n        </label>\r\n        <button className={styles.TaskEditor_button}> Add contact</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: contactSelectors.getContacts(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSubmit: (name, number) =>\r\n      dispatch(contactOperations.contactAdd(name, number)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './contact-actions';\r\n\r\nexport const fetchContacts = () => async (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.message));\r\n  }\r\n};\r\n\r\nexport const contactAdd = (name, number) => (dispatch) => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch((error) => dispatch(addContactError(error.message)));\r\n};\r\n\r\nexport const contactDelete = (id) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(deleteContactError(error.message)));\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport * as contactOperations from '../../redux/contact/contact-operations';\r\nimport * as contactSelectors from '../../redux/contact/contact-selectors';\r\n\r\nconst ContactList = ({ onDel, contacts }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => dispatch(contactOperations.fetchContacts()), [dispatch]);\r\n\r\n  return (\r\n    <ul className={styles.TaskList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={styles.TaskList_item} key={id}>\r\n          {name} : {number}\r\n          {\r\n            <button\r\n              className={styles.TaskList_button}\r\n              type=\"button\"\r\n              name=\"delte\"\r\n              onClick={() => onDel(id)}\r\n            >\r\n              delete\r\n            </button>\r\n          }\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  onDel: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactSelectors.filteredContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDel: (id) => dispatch(contactOperations.contactDelete(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Filter from '../../components/Filter/Filter';\r\nimport { getLoading } from '../../redux/contact/contact-selectors';\r\nimport ContactForm from '../../components/ContactForm/ContactForm';\r\nimport ContactList from '../../components/ContactList/ContactList';\r\n\r\nconst ContactsView = () => {\r\n  const loading = useSelector(getLoading);\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      {loading && <h1>Загружаем ...</h1>}\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsView;\r\n","import React from 'react';\r\nimport style from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={style.container}>{children}</div>\r\n);\r\n\r\nexport default Container;\r\n","export const getUseremail = (state) => state.auth.user.email;\r\nexport const isAuthenticated = (state) => state.auth.token;\r\nexport const getIsisAuthorizedSelector = (state) => state.auth.isAuthorized;\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getIsisAuthorizedSelector } from '../../redux/auth/auth-selectors';\r\n\r\n/**\r\n * 1. Он должен повторять API Route\r\n *  2. Он должен рендерить Route\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на redirectTo\r\n */\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoadID = useSelector(getIsisAuthorizedSelector);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoadID ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getIsisAuthorizedSelector } from '../../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и юзер залогинен, рендерит редирект на redirectTo\r\n * - В противном случае рендерит компонент\r\n *\r\n */\r\n\r\nexport default function PublicRoute({ children, redirectTo, ...routeProps }) {\r\n  const isLoadID = useSelector(getIsisAuthorizedSelector);\r\n  const shouldRedirect = isLoadID && routeProps.restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","const routes = {\r\n  HOME: '/',\r\n  MOVIES: '/movies',\r\n  CONTACTS: '/contacts',\r\n  REGISTER: '/register',\r\n  LOGIN: '/login',\r\n};\r\n\r\nexport default routes;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './AuthNav.module.css';\r\nimport routes from '../routes';\r\n\r\nconst AuthNav = () => {\r\n  const styles = {\r\n    activeLink: {\r\n      color: '#ffffff',\r\n      backgroundColor: 'rgb(70, 100, 100)',\r\n      borderColor: 'rgb(50, 80, 100)',\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to={routes.REGISTER}\r\n        className={s.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Sign up\r\n      </NavLink>\r\n      <NavLink\r\n        to={routes.LOGIN}\r\n        className={s.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Sign in\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthNav;\r\n","import React from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { getIsisAuthorizedSelector } from '../../redux/auth/auth-selectors';\r\nimport styles from './Nav.module.css';\r\nimport routes from '../routes';\r\n\r\nconst Nav = () => {\r\n  const IsisAuthorized = useSelector(getIsisAuthorizedSelector);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className={styles.navList}>\r\n        <li className={styles.navListItem}>\r\n          <NavLink\r\n            exact\r\n            to={routes.HOME}\r\n            className={styles.Link}\r\n            activeClassName={styles.linkFocusColor}\r\n          >\r\n            Home\r\n          </NavLink>\r\n        </li>\r\n        {IsisAuthorized && (\r\n          <li className={styles.navListItem}>\r\n            <NavLink\r\n              to={routes.CONTACTS}\r\n              className={styles.Link}\r\n              activeClassName={styles.linkFocusColor}\r\n            >\r\n              Contacts\r\n            </NavLink>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nexport default Nav;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { getUseremail } from '../../redux/auth/auth-selectors';\r\nimport { logout } from '../../redux/auth/auth-operations';\r\nimport style from './UserMenu.module.css';\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const email = useSelector(getUseremail);\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <span className={style.name}>Hello, {email}!</span>\r\n      <button\r\n        className={style.button}\r\n        type=\"button\"\r\n        onClick={() => dispatch(logout())}\r\n      >\r\n        Log out\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import AuthNav from '../../views/AuthNav/AuthNav';\r\nimport { useSelector } from 'react-redux';\r\nimport Nav from '../../views/Nav/Nav';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport style from '../AppBar/AppBar.module.css';\r\nimport { isAuthenticated } from '../../redux/auth/auth-selectors';\r\n\r\nconst AppBar = () => {\r\n  const isLoadID = useSelector(isAuthenticated);\r\n\r\n  return (\r\n    <header className={style.header}>\r\n      <Nav />\r\n\r\n      {isLoadID ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n};\r\nexport default AppBar;\r\n","import React, { Suspense, useEffect, lazy } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { useDispatch, connect } from 'react-redux';\n// import HomeView from './views/HomeView';\nimport ContactsView from './views/ContactsView/ContactsView';\n// import RegisterView from './views/RegisterView/RegisterView';\n// import LoginView from './views/LoginView/LoginView';\nimport Container from './components/Container/Container';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport PublicRoute from './components/PublicRoute/PublicRoute';\nimport AppBar from './components/AppBar/AppBar';\nimport { getCurrentUser } from './redux/auth/auth-operations';\nimport * as contactSelectors from '../src/redux/contact/contact-selectors';\n\nconst App = () => {\n  const HomeView = lazy(() =>\n    import('./views/HomeView' /* webpackChunkName: \"home-view\" */)\n  );\n\n  // const ContactsView = lazy(() =>\n  //   import(\n  //     './views/ContactsView/ContactsView' /* webpackChunkName: \"contacts-view\" */\n  //   )\n  // );\n\n  const RegisterView = lazy(() =>\n    import(\n      './views/RegisterView/RegisterView' /* webpackChunkName: \"register-view\" */\n    )\n  );\n\n  const LoginView = lazy(() =>\n    import('./views/LoginView/LoginView' /* webpackChunkName: \"login-view\" */)\n  );\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Container>\n        <Suspense fallback={<p>Loading...</p>}>\n          <AppBar />\n          <Switch>\n            <PublicRoute exact path=\"/\" restricted redirectTo=\"/contacts\">\n              <HomeView />\n            </PublicRoute>\n            <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n              <ContactsView />\n            </PrivateRoute>\n            <PublicRoute path=\"/register\" restricted redirectTo=\"/contacts\">\n              <RegisterView />\n            </PublicRoute>\n            <PublicRoute path=\"/login\" restricted redirectTo=\"/contacts\">\n              <LoginView />\n            </PublicRoute>\n          </Switch>\n        </Suspense>\n      </Container>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    loading: contactSelectors.getLoading(state),\n  };\n};\n\nexport default connect(mapStateToProps, null)(App);\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  contactFilter,\r\n} from './contact-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [contactFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactsError]: (_, { payload }) => payload,\r\n  [addContactError]: (_, { payload }) => payload,\r\n  [deleteContactError]: (_, { payload }) => payload,\r\n  [fetchContactsRequest]: () => null,\r\n  [addContactRequest]: () => null,\r\n  [deleteContactRequest]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n\r\n// const items = (state = contactinitialState, { type, payload }) => {\r\n//   switch (type) {\r\n//     case actionType.ADD:\r\n//       return [payload, ...state];\r\n\r\n//     case actionType.DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case actionType.CHANGE_FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as authActions from './auth-actios';\r\n\r\nconst initialState = {\r\n  name: null,\r\n  email: null,\r\n};\r\n\r\nconst isAuthorized = createReducer(false, {\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.signupSuccess]: () => true,\r\n  [authActions.currentSuccess]: () => true,\r\n  [authActions.logoutSuccess]: () => false,\r\n  [authActions.currentError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.signupError]: () => false,\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [authActions.currentRequest]: () => true,\r\n  [authActions.currentSuccess]: () => false,\r\n  [authActions.currentError]: () => false,\r\n\r\n  [authActions.loginRequest]: () => true,\r\n  [authActions.loginSuccess]: () => false,\r\n  [authActions.loginError]: () => false,\r\n\r\n  [authActions.logoutRequest]: () => true,\r\n  [authActions.logoutSuccess]: () => false,\r\n  [authActions.logoutError]: () => false,\r\n\r\n  [authActions.signupRequest]: () => true,\r\n  [authActions.signupSuccess]: () => false,\r\n  [authActions.signupError]: () => false,\r\n});\r\n\r\nconst user = createReducer(initialState, {\r\n  [authActions.signupSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialState,\r\n  [authActions.currentSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.signupSuccess]: (_, action) => action.payload.token,\r\n  [authActions.loginSuccess]: (_, action) => action.payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.signupError]: () => (_, action) => action.payload,\r\n  [authActions.loginError]: () => (_, action) => action.payload,\r\n  [authActions.currentError]: () => (_, action) => action.payload,\r\n  [authActions.logoutError]: () => (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  isLoading,\r\n  error,\r\n  isAuthorized,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport counterReducer from './contact/contacts-reducer';\r\nimport authReducer from './auth/auth-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whiteList: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: counterReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware: middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n\r\n//\r\n// const rootReducer = combineReducers({\r\n//   contacts: persisterReducer(PersistConfig, counterReducer),\r\n// });\r\n\r\n// const persisterReducer = persistReducer(PersistConfig, rootReducer);\r\n\r\n// import { applyMiddleware, combineReducers } from 'redux';\r\n// const rootReducer = combineReducers({\r\n//   contacts: counterReducer,\r\n// });\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n// const initialState = {\r\n//   contacts: {\r\n//     items: [\r\n//       { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n//       { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n//       { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n//       { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n//     ],\r\n//     filters: '',\r\n//   },\r\n// };\r\n\r\n// const reducer = (state = initialState, { type, payload }) => {\r\n//   switch (type) {\r\n//     case 'contacts/add':\r\n//       return {\r\n//         ...state,\r\n//         contacts: {\r\n//           ...state.contacts,\r\n//           items: [payload, ...state.contacts.items],\r\n//         },\r\n//       };\r\n\r\n//     case 'contacts/delete':\r\n//       return {\r\n//         ...state,\r\n//         contacts: {\r\n//           ...state.contacts,\r\n//           items: state.contacts.items.filter(({ id }) => id !== payload),\r\n//         },\r\n//       };\r\n\r\n//     case 'contacts/filter':\r\n//       return {\r\n//         ...state,\r\n//         contacts: {\r\n//           ...state.contacts,\r\n//           items: state.contacts.items.filter((name) =>\r\n//             name.toLowerCase().includes(state.contacts.filters.toLowerCase())\r\n//           ),\r\n//         },\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\n\nReactDom.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}